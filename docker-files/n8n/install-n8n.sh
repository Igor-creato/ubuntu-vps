#!/bin/bash

set -e

echo "üöÄ –ù–∞—á–∞–ª–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è n8n —Å Docker volumes"

# –°–æ–∑–¥–∞–µ–º —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
N8N_DIR="$HOME/n8n"
echo "üìÅ –°–æ–∑–¥–∞–µ–º —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: $N8N_DIR"
mkdir -p "$N8N_DIR"
cd "$N8N_DIR"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
echo "üìÇ –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π"
mkdir -p secrets

# –°–∫–∞—á–∏–≤–∞–µ–º docker-compose.yml
echo "üì• –ó–∞–≥—Ä—É–∂–∞–µ–º docker-compose.yml"
cat > docker-compose.yml << 'EOF'

services:
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-n8n}
      POSTGRES_USER: ${POSTGRES_USER:-n8n_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - n8n_internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-n8n_user} -d ${POSTGRES_DB:-n8n}"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  n8n:
    image: docker.n8n.io/n8nio/n8n:latest
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB:-n8n}
      - DB_POSTGRESDB_USER=${POSTGRES_USER:-n8n_user}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_POSTGRESDB_SCHEMA=public
      - N8N_HOST=${N8N_HOST}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - WEBHOOK_URL=https://${N8N_HOST}/
      - NODE_ENV=production
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE:-Europe/Moscow}
      - TZ=${GENERIC_TIMEZONE:-Europe/Moscow}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - N8N_DIAGNOSTICS_ENABLED=false
      - N8N_PUBLIC_API_DISABLED=true
      - N8N_USER_MANAGEMENT_DISABLED=false
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
    volumes:
      - n8n_data:/home/node/.n8n
      - n8n_files:/files
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`${N8N_HOST}`)"
      - "traefik.http.routers.n8n.entrypoints=websecure"
      - "traefik.http.routers.n8n.tls.certresolver=le"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"
      - "traefik.docker.network=proxy"
    networks:
      - n8n_internal
      - proxy
    deploy:
      resources:
        limits:
          memory: 1024M
        reservations:
          memory: 512M

networks:
  n8n_internal:
    driver: bridge
  proxy:
    external: true
    name: proxy

volumes:
  postgres_data:
    driver: local
    name: n8n-postgres-data
  n8n_data:
    driver: local
    name: n8n-app-data
  n8n_files:
    driver: local
    name: n8n-shared-files
EOF

echo "‚úÖ docker-compose.yml —Å–æ–∑–¥–∞–Ω"

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø–∞—Ä–æ–ª–∏ –∏ —Å–µ–∫—Ä–µ—Ç—ã
echo "üîê –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø–∞—Ä–æ–ª–∏ –∏ —Å–µ–∫—Ä–µ—Ç—ã"

POSTGRES_PASSWORD=$(openssl rand -base64 24 | tr -d '/+' | cut -c1-32)
N8N_ENCRYPTION_KEY=$(openssl rand -base64 24 | tr -d '/+' | cut -c1-32)
N8N_BASIC_AUTH_PASSWORD=$(openssl rand -base64 16 | tr -d '/+' | cut -c1-16)
N8N_BASIC_AUTH_USER="admin"

# –ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞
echo "üåê –ó–∞–ø—Ä–æ—Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"
read -p "–í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω–Ω–æ–µ –∏–º—è –¥–ª—è n8n (–Ω–∞–ø—Ä–∏–º–µ—Ä: n8n.example.com): " N8N_HOST
read -p "–í–≤–µ–¥–∏—Ç–µ email –¥–ª—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ Let's Encrypt: " SSL_EMAIL

# –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª
echo "üìù –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π"
cat > .env << EOF
# –î–æ–º–µ–Ω–Ω–æ–µ –∏–º—è –¥–ª—è n8n
N8N_HOST=${N8N_HOST}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ PostgreSQL
POSTGRES_DB=n8n
POSTGRES_USER=n8n_user
POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

# –ë–∞–∑–æ–≤–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è n8n
N8N_BASIC_AUTH_ACTIVE=true
N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}

# –ö–ª—é—á —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è n8n
N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Ä–µ–º–µ–Ω–∏
GENERIC_TIMEZONE=Europe/Moscow
TZ=Europe/Moscow

# Email –¥–ª—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
SSL_EMAIL=${SSL_EMAIL}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
N8N_DIAGNOSTICS_ENABLED=false
N8N_PUBLIC_API_DISABLED=true
N8N_USER_MANAGEMENT_DISABLED=false
EOF

echo "‚úÖ .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω"

# –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –±–∞–∑–æ–≤–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
echo "üîê –°–æ–∑–¥–∞–µ–º n8n.htpasswd"
if ! command -v htpasswd &> /dev/null; then
    echo "‚ö†Ô∏è htpasswd –Ω–µ –Ω–∞–π–¥–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º apache2-utils"
    sudo apt-get update
    sudo apt-get install -y apache2-utils
fi

htpasswd -bc ./secrets/n8n.htpasswd "$N8N_BASIC_AUTH_USER" "$N8N_BASIC_AUTH_PASSWORD"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
echo "üîí –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º"
chmod 600 .env
chmod 600 ./secrets/n8n.htpasswd
chmod 700 secrets

# –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª"
if [ ! -f ".env" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º Docker volumes
echo "üê≥ –°–æ–∑–¥–∞–µ–º Docker volumes"
docker volume create n8n-postgres-data
docker volume create n8n-app-data
docker volume create n8n-shared-files

# –í—ã–≤–æ–¥–∏–º –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
echo ""
echo "================================================"
echo "üîê –û–î–ù–û–†–ê–ó–û–í–´–ï –£–ß–ï–¢–ù–´–ï –î–ê–ù–ù–´–ï –î–õ–Ø N8N"
echo "================================================"
echo "üåê –î–æ–º–µ–Ω: https://$N8N_HOST"
echo "üë§ –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $N8N_BASIC_AUTH_USER"
echo "üîë –ü–∞—Ä–æ–ª—å: $N8N_BASIC_AUTH_PASSWORD"
echo "üóÑÔ∏è –ü–∞—Ä–æ–ª—å PostgreSQL: $POSTGRES_PASSWORD"
echo "üîí –ö–ª—é—á —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è n8n: $N8N_ENCRYPTION_KEY"
echo "================================================"
echo "‚ö†Ô∏è –°–û–•–†–ê–ù–ò–¢–ï –≠–¢–ò –î–ê–ù–ù–´–ï –í –ë–ï–ó–û–ü–ê–°–ù–û–ú –ú–ï–°–¢–ï!"
echo "‚ö†Ô∏è –û–ù–ò –ë–£–î–£–¢ –£–î–ê–õ–ï–ù–´ –ò–ó .env –§–ê–ô–õ–ê!"
echo "================================================"
echo ""

# –û–∂–∏–¥–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
read -p "–ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ .env..."

# –£–¥–∞–ª—è–µ–º —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ .env
echo "üßπ –£–¥–∞–ª—è–µ–º —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞"
sed -i '/POSTGRES_PASSWORD=/d' .env
sed -i '/N8N_BASIC_AUTH_PASSWORD=/d' .env
sed -i '/N8N_ENCRYPTION_KEY=/d' .env

# –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ñ–∞–π–ª–æ–≤—ã–µ —Å–µ–∫—Ä–µ—Ç—ã
cat >> .env << EOF

# –°–µ–∫—Ä–µ—Ç—ã —á–µ—Ä–µ–∑ —Ñ–∞–π–ª—ã
POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
N8N_BASIC_AUTH_PASSWORD_FILE=/run/secrets/n8n_auth_password
N8N_ENCRYPTION_KEY_FILE=/run/secrets/n8n_encryption_key
EOF

# –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª–æ–≤—ã–µ —Å–µ–∫—Ä–µ—Ç—ã
echo "üìÅ –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª–æ–≤—ã–µ —Å–µ–∫—Ä–µ—Ç—ã"
echo "$POSTGRES_PASSWORD" > ./secrets/postgres_password
echo "$N8N_BASIC_AUTH_PASSWORD" > ./secrets/n8n_auth_password
echo "$N8N_ENCRYPTION_KEY" > ./secrets/n8n_encryption_key

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è —Å–µ–∫—Ä–µ—Ç–æ–≤
chmod 600 ./secrets/*

# –ó–∞–ø—É—Å–∫–∞–µ–º docker-compose
echo "üê≥ –ó–∞–ø—É—Å–∫–∞–µ–º n8n —Å –ø–æ–º–æ—â—å—é Docker Compose"
docker compose up -d

echo ""
echo "‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "üåê n8n –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: https://$N8N_HOST"
echo "‚è≥ –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –ø–æ–∫–∞ –∑–∞–ø—É—Å—Ç—è—Ç—Å—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
echo ""
echo "üìã –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: docker compose logs -f"
echo "üìä –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ volumes: docker volume ls | grep n8n"
echo "üîß –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: docker compose down"
echo "üîÑ –î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: docker compose pull && docker compose up -d"

# –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ volumes
echo ""
echo "üíæ –°–û–ó–î–ê–ù–ù–´–ï DOCKER VOLUMES:"
docker volume ls | grep n8n

echo ""
echo "üîí –î–ê–ù–ù–´–ï –°–û–•–†–ê–ù–Ø–Æ–¢–°–Ø –í:"
echo "   ‚Ä¢ PostgreSQL: volume n8n-postgres-data"
echo "   ‚Ä¢ n8n –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: volume n8n-app-data" 
echo "   ‚Ä¢ –û–±—â–∏–µ —Ñ–∞–π–ª—ã: volume n8n-shared-files"
echo "   ‚Ä¢ –°–µ–∫—Ä–µ—Ç—ã: $N8N_DIR/secrets/"
